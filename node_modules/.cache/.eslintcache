[{"D:\\React\\my-personal-portfolio\\src\\index.js":"1","D:\\React\\my-personal-portfolio\\src\\App.js":"2","D:\\React\\my-personal-portfolio\\src\\reportWebVitals.js":"3","D:\\React\\my-personal-portfolio\\src\\components\\NavBar.js":"4","D:\\React\\my-personal-portfolio\\src\\components\\Banner.js":"5","D:\\React\\my-personal-portfolio\\src\\components\\Skills.js":"6"},{"size":535,"mtime":1672840004594,"results":"7","hashOfConfig":"8"},{"size":361,"mtime":1673719098940,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":1672840005288,"results":"10","hashOfConfig":"8"},{"size":2825,"mtime":1673453804864,"results":"11","hashOfConfig":"8"},{"size":2197,"mtime":1673454060577,"results":"12","hashOfConfig":"8"},{"size":1961,"mtime":1673531042179,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},"1clvc2l",{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"17"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"17"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\React\\my-personal-portfolio\\src\\index.js",[],[],[],"D:\\React\\my-personal-portfolio\\src\\App.js",["35"],[],"D:\\React\\my-personal-portfolio\\src\\reportWebVitals.js",[],[],"D:\\React\\my-personal-portfolio\\src\\components\\NavBar.js",["36","37","38"],[],"import { useState, useEffect } from \"react\";\r\nimport { Navbar, Nav, Container } from \"react-bootstrap\";\r\nimport logo from \"../assets/img/logo.svg\";\r\nimport navIcon1 from \"../assets/img/nav-icon1.svg\";\r\nimport navIcon2 from \"../assets/img/nav-icon2.svg\";\r\nimport navIcon3 from \"../assets/img/nav-icon3.svg\";\r\n\r\nexport const NavBar = () => {\r\n  const [activeLink, setActiveLink] = useState(\"home\");\r\n  const [scrolled, setScrolled] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const onScroll = () => {\r\n      if (window.scrollY > 50) {\r\n        setScrolled(true);\r\n      } else {\r\n        setScrolled(false);\r\n      }\r\n    };\r\n\r\n    window.addEventListener(\"scroll\", onScroll);\r\n\r\n    return () => window.removeEventListener(\"scroll\", onScroll);\r\n  }, []);\r\n\r\n  const onUpdateActiveLink = (value) => {\r\n    setActiveLink(value);\r\n  };\r\n\r\n  return (\r\n    <Navbar expand=\"md\" className={scrolled ? \"scrolled\" : \"\"}>\r\n      <Container>\r\n        <Navbar.Brand href=\"#home\">\r\n          <img src={logo} alt=\"logo\" />\r\n        </Navbar.Brand>\r\n\r\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\">\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </Navbar.Toggle>\r\n\r\n        <Navbar.Collapse id=\"basic-navbar-nav\">\r\n          <Nav className=\"ms-auto\">\r\n            <Nav.Link\r\n              href=\"#home\"\r\n              className={\r\n                activeLink === \"home\" ? \"active navbar-link\" : \"navbar-link\"\r\n              }\r\n              onClick={() => onUpdateActiveLink(\"home\")}\r\n            >\r\n              Home\r\n            </Nav.Link>\r\n            <Nav.Link\r\n              href=\"#skills\"\r\n              className={\r\n                activeLink === \"skills\" ? \"active navbar-link\" : \"navbar-link\"\r\n              }\r\n              onClick={() => onUpdateActiveLink(\"skills\")}\r\n            >\r\n              Skills\r\n            </Nav.Link>\r\n            <Nav.Link\r\n              href=\"#projects\"\r\n              className={\r\n                activeLink === \"projects\" ? \"active navbar-link\" : \"navbar-link\"\r\n              }\r\n              onClick={() => onUpdateActiveLink(\"projects\")}\r\n            >\r\n              Projects\r\n            </Nav.Link>\r\n          </Nav>\r\n\r\n          <span className=\"navbar-text\">\r\n            <div className=\"social-icon\">\r\n              <a href=\"#\">\r\n                <img src={navIcon1} alt=\"\" />{\" \"}\r\n              </a>\r\n              <a href=\"#\">\r\n                <img src={navIcon2} alt=\"\" />{\" \"}\r\n              </a>\r\n              <a href=\"#\">\r\n                <img src={navIcon3} alt=\"\" />{\" \"}\r\n              </a>\r\n            </div>\r\n            <button className=\"vvd\" onClick={() => console.log(\"connect\")}>\r\n              <span>let's connect </span>\r\n            </button>\r\n          </span>\r\n        </Navbar.Collapse>\r\n      </Container>\r\n    </Navbar>\r\n  );\r\n};\r\n","D:\\React\\my-personal-portfolio\\src\\components\\Banner.js",["39"],[],"import { useState, useEffect } from \"react\";\r\nimport { Container, Row, Col } from \"react-bootstrap\"\r\nimport { ArrowRightCircle} from \"react-bootstrap-icons\";\r\nimport headerImg from \"../assets/img/header-img.svg\";\r\n\r\nexport const Banner = () => {\r\n    const  [ LoopNum, setLoopNum ] = useState(0);\r\n    const [isDeleting, setIsDeleting ] = useState(false);\r\n    const toRotate = [ \"Web Developer\", \" Web Designer\", \"UI/UX Designer\" ];\r\n    const [ text, setText ] = useState('');\r\n    const [delta, setDelta] = useState(300 - Math.random() * 100);\r\n    const period = 2000;\r\n\r\n    useEffect(() => {\r\n        let ticker = setInterval(() => {\r\n            tick();\r\n        },delta)\r\n        return() => { clearInterval(ticker)};\r\n    }, [text] )\r\n\r\n    const tick = () => {\r\n        let i = LoopNum % toRotate.length;\r\n        let fullText = toRotate[i];\r\n        let updatedText = isDeleting ? fullText.substring(0, text.length - 1): fullText.substring(0, text.length + 1);\r\n\r\n        setText(updatedText);\r\n\r\n        if (isDeleting) {\r\n            setDelta(prevDelta => prevDelta /2)\r\n        }\r\n\r\n        if (!isDeleting && updatedText === fullText) {\r\n            setIsDeleting(true);\r\n            setIsDeleting(period);\r\n        } else if(!isDeleting && updatedText === '') {\r\n            setIsDeleting(false);\r\n            setLoopNum(LoopNum + 1);\r\n            setDelta(500);\r\n        }\r\n    }\r\n\r\n    return(\r\n         <section className=\"banner\" id=\"home\">\r\n            <Container>\r\n                <Row className=\"align-item-center\">\r\n                    <Col xs={12} md={6} xl={7}>\r\n                        <span className=\"tagline\">Welcome to my portfolio</span>\r\n                        <h1>{'Hi i m webdecoded'}<span className=\"wrap\">[text]</span></h1>\r\n                        <p> lorem paragraphe </p>\r\n                        <button onClick={() => console.log('connect') }> let's connect <ArrowRightCircle size ={25}/> </button>\r\n                    </Col>\r\n                    <Col xs={12} md={6} xl={5}>\r\n                        <img src={headerImg} alt=\"Header Img\" />\r\n                    </Col>\r\n\r\n                </Row>\r\n            </Container>\r\n         </section>\r\n\r\n    )\r\n}","D:\\React\\my-personal-portfolio\\src\\components\\Skills.js",["40","41","42","43","44"],[],{"ruleId":"45","severity":1,"message":"46","line":5,"column":10,"nodeType":"47","messageId":"48","endLine":5,"endColumn":16},{"ruleId":"49","severity":1,"message":"50","line":74,"column":15,"nodeType":"51","endLine":74,"endColumn":27},{"ruleId":"49","severity":1,"message":"50","line":77,"column":15,"nodeType":"51","endLine":77,"endColumn":27},{"ruleId":"49","severity":1,"message":"50","line":80,"column":15,"nodeType":"51","endLine":80,"endColumn":27},{"ruleId":"52","severity":1,"message":"53","line":19,"column":8,"nodeType":"54","endLine":19,"endColumn":14,"suggestions":"55"},{"ruleId":"56","severity":1,"message":"57","line":43,"column":17,"nodeType":"51","endLine":43,"endColumn":49},{"ruleId":"56","severity":1,"message":"57","line":47,"column":17,"nodeType":"51","endLine":47,"endColumn":49},{"ruleId":"56","severity":1,"message":"57","line":51,"column":17,"nodeType":"51","endLine":51,"endColumn":49},{"ruleId":"56","severity":1,"message":"57","line":55,"column":17,"nodeType":"51","endLine":55,"endColumn":49},{"ruleId":"58","severity":1,"message":"59","line":62,"column":7,"nodeType":"51","endLine":62,"endColumn":65},"no-unused-vars","'Skills' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'delta' and 'tick'. Either include them or remove the dependency array.","ArrayExpression",["60"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You donâ€™t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.",{"desc":"61","fix":"62"},"Update the dependencies array to be: [delta, text, tick]",{"range":"63","text":"64"},[734,740],"[delta, text, tick]"]